@using Website.Models.Web;
@using Website.Models.Enums;
@model BooksSearchAndResult
@{
    ViewData["Title"] = "Home Page";

    string RatedLink(bool flag)
    {
        var newRequest = Model.Request.MemberwiseClone();
        newRequest.RatedOnly = flag ? 1 : 0;
        newRequest.Start = 1;
        return Url.Action("Index", "Home", newRequest);
    }
}

@section Style {
    <link rel="stylesheet" href="css/main-page.css" />
}

@section HeaderContent {
    <div class="header_content">
        <div class="header_content-inner">
            <div class="header-logo">
                <img src="/img/main-logo.png" alt="logo">
            </div>
            <div class="header-content-input">
                <form>
                    <input class="content_input" oninput="return showicon()" type="text" name="Text" placeholder="Search book" maxlength="150" value="@Model.Request.Text">
                    <div class="input_close">
                        <span class="fa fa-close" title="delete"></span>
                    </div>
                    <button class="header_content-search" type="submit" title="search">&#x1F50E;</button>
                </form>
            </div>
            <ul class="header_content-items">
                <li class="header_content-self">
                    <a class="header_content-link header_content-link--user" href="#">
                        <svg width="17" height="21" viewBox="0 0 17 21" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M8.43483 0.496338C5.1832 0.496338 2.53045 3.35543 2.53045 6.85997C2.53045 9.05088 3.56793 10.9963 5.14018 12.1445C2.13148 13.5354 0 16.7536 0 20.4963H1.68697C1.68697 16.4691 4.6982 13.2236 8.43483 13.2236C12.1715 13.2236 15.1827 16.4691 15.1827 20.4963H16.8697C16.8697 16.7536 14.7382 13.5363 11.7295 12.1436C12.5319 11.5598 13.1894 10.7729 13.6443 9.85178C14.0993 8.93069 14.3379 7.90346 14.3392 6.85997C14.3392 3.35543 11.6865 0.496338 8.43483 0.496338ZM8.43483 2.31452C10.7738 2.31452 12.6522 4.33907 12.6522 6.85997C12.6522 9.38088 10.7738 11.4054 8.43483 11.4054C6.09585 11.4054 4.21741 9.38088 4.21741 6.85997C4.21741 4.33907 6.09585 2.31452 8.43483 2.31452Z"
                                  fill="#393280" />
                        </svg>
                    </a>
                </li>
                <span class="stick_header"> | </span>
                <li class="header_content-self">
                    <a class="header_content-link" href="#">
                        <svg width="16" height="21" viewBox="0 0 16 21" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M7.93902 0.496338C5.96844 0.496338 4.35092 2.23018 4.35092 4.34249V5.11172H0.807321L0.762829 5.83326L0.0452101 19.6794L0 20.4963H15.8773L15.8328 19.6786L15.1152 5.83249L15.07 5.11172H11.5271V4.34249C11.5271 2.23018 9.9096 0.496338 7.93902 0.496338ZM7.93902 2.0348C8.50999 2.0348 9.05758 2.27793 9.46132 2.71071C9.86506 3.14348 10.0919 3.73045 10.0919 4.34249V5.11172H5.78616V4.34249C5.78616 3.73045 6.01298 3.14348 6.41672 2.71071C6.82046 2.27793 7.36805 2.0348 7.93902 2.0348V2.0348ZM2.15286 6.65018H4.35092V8.95788H5.78616V6.65018H10.0919V8.95788H11.5271V6.65018H13.7252L14.3531 18.9579H1.52566L2.15286 6.65018Z"
                                  fill="#393280" />
                        </svg>
                    </a>
                </li>
                <span class="stick_header"> | </span>
                <li class="header_content-self">
                    <a class="header_content-link" href="@Url.Action("Index", "MyFavorites")">
                        <svg width="20" height="23" viewBox="0 0 20 23" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M2.09519 12.0359C0.148184 8.77661 0.797187 3.88765 4.0422 2.25799C7.28721 0.628339 9.23422 3.88765 9.88322 5.5173C10.5322 3.88765 13.1282 0.628339 16.3732 2.25799C19.6183 3.88765 19.6183 8.77661 17.6712 12.0359C15.7242 15.2952 9.88322 21.8138 9.88322 21.8138C9.88322 21.8138 4.0422 15.2952 2.09519 12.0359Z"
                                  stroke="#393280" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                        </svg>
                    </a>
                </li>
            </ul>
        </div>
    </div>
}

@{
    var firstItem = Model.Result.FirstOrDefault();
    var startItem = firstItem != null ? firstItem.RowNumber: 0;
    var lastItem = Model.Result.LastOrDefault();
    var endItem = lastItem != null ? lastItem.RowNumber : 0;
    var totalItems = lastItem!=null ? lastItem.TotalCount : 0;

    string PrevPageLink()
    {
        if(firstItem == null || firstItem.RowNumber <= 1) return string.Empty;
        var newRequest = Model.Request.MemberwiseClone();
        newRequest.Start = Math.Max(firstItem.RowNumber - newRequest.Count, 1);
        return Url.Action("Index", "Home", newRequest);
    }

    string NextPageLink()
    {
        if (lastItem == null || lastItem.RowNumber >= lastItem.TotalCount) return string.Empty;
        var newRequest = Model.Request.MemberwiseClone();
        newRequest.Start = lastItem.RowNumber + 1;
        return Url.Action("Index", "Home", newRequest);
    }

    var sortList = new List<String>
    {
        "Relevance",
        "Alphabetically A-Z",
        "Alphabetically Z-A",
        "By popularity",
        "By price: from low to high",
        "By price: from high to low"
    };

    var sortType = Model.Request.SortType;
    var noRelevance = false;

    if (string.IsNullOrEmpty(Model.Request.Text))
    {
        if(sortType == null || sortType == (int)BookUISortType.Relevance) sortType = (int)BookUISortType.TitleAsc;
        noRelevance = true;
    }
    else
    {
        if (sortType == null) sortType = (int)BookUISortType.Relevance;
    }

    var sortDict = new Dictionary<String, int>();
    for (var i = 0; i<sortList.Count; i++)
    {
        sortDict[sortList[i]] = i;
    }

    var currentSortValue = sortList[sortType.Value];

    var removeSorts = new List<String>
    {
        currentSortValue
    };

    if (noRelevance)
    {
        var rel = "Relevance";
        if (!removeSorts.Contains(rel)) removeSorts.Add(rel);
    }

    sortList = sortList.Except(removeSorts).ToList();

    string SortLink(string sortString)
    {
        var newRequest = Model.Request.MemberwiseClone();
        newRequest.SortType = sortDict[sortString];
        newRequest.Start = 1;
        return Url.Action("Index", "Home", newRequest);
    }

}
<section class="main_book-list">
    <div class="container">
        <div class="book_list-text">
            <p class="list_text list_text--s">Sort by : <button onclick="showList()" class="btn_show-list" id="btn_show-list" type="button">@currentSortValue</button></p>
            <p class="list_text list_text--s">Showing @startItem - @endItem of @totalItems result(s)</p>
            <p class="list_text list_text--s">Show : @Model.Result.Count</p>
            <div class="show_list" id="show_list">
                <div class="show_list-inner">
                    @foreach (var sortString in sortList)
                    {
                    <p class="show_list-text"><a class="show_list-text--link" href="@SortLink(sortString)">@sortString</a></p>
                    }
                </div>
            </div>
        </div>
        <div class="book_list-inner">
            @foreach (var book in Model.Result)
            {
                <div class="main-list--info">
                    <div class="img-box">
                        <a href="@Url.Action("Index", "Book", new { book.Id })" target="_parent">
                            <img src="@book.Image_URL_M" alt="b1">
                            <img class="main_list-background" src="/img/footer-logo.png" alt="backgroung-logo">
                            <p class="cart">Add to cart</p>
                        </a>
                    </div>
                    <div class="main_list--inner">
                        <h3 class="main_title ">@book.Title</h3>
                        <p class="main_name">@book.Author</p>
                        <p class="main_price ">$@book.Price</p>
                    </div>
                </div>
            }
        </div>
        @if (firstItem != null)
        {
        <div class="main_list-arrow">
            @if(firstItem.RowNumber > 1)
            { 
        <a class="main_list-left--arrow" href="@PrevPageLink()">
            <svg width="23" height="15" viewBox="0 0 23 15" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M6.46271 14.0059L7.8174 12.5916L3.69655 8.38508L23 8.38508L23 6.41942L3.69655 6.41942L7.81644 2.21195L6.46271 0.798641L0 7.40225L6.46271 14.0059Z" fill="#393280" />
            </svg>
        </a>
            }
            @if (lastItem.RowNumber < lastItem.TotalCount)
            {
        <a class="main_list-roght--arrow" href="@NextPageLink()">
            <svg width="23" height="14" viewBox="0 0 23 14" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M16.5373 0.744385L15.1826 2.15867L19.3035 6.36517H0V8.33082H19.3035L15.1836 12.5383L16.5373 13.9516L23 7.34799L16.5373 0.744385Z" fill="#393280" />
            </svg>
        </a>
            }
    </div>
        }
    </div>
</section>


@section Script {
    <script src="/js/main-page.js"></script>
}

